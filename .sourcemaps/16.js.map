{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":["RegisterPageModule","__decorate","Object","__WEBPACK_IMPORTED_MODULE_0__angular_core__","declarations","__WEBPACK_IMPORTED_MODULE_2__register__","imports","__WEBPACK_IMPORTED_MODULE_1_ionic_angular__","forChild","RegisterPage","navCtrl","navParams","formBuilder","firebaseService","this","users","years","disable","emailValidate","emailForm","__WEBPACK_IMPORTED_MODULE_2__angular_forms__","email","prototype","ionViewDidLoad","selectedStatus","slides","lockSwipes","console","log","name","group","compose","required","pattern","ionViewDidEnter","startSlide","isBeginning","backlogin","push","slideChanged","getActiveIndex","emailNext","valid","slideNext","next","errorMessage","prev","slidePrev","chooseImage","event","checkUser","_this","errorMessageUser","getAllUsers","snapshotChanges","subscribe","items","usersArray","forEach","item","y","payload","toJSON","key","res","username","toLowerCase","checkEmail","submit","points","blobFile","image","online","signUp","then","user","verifyEmail","catch","error","selector","template","__WEBPACK_IMPORTED_MODULE_3__providers_firebase_service__"],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n  ]\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Slides } from 'ionic-angular';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Users } from '../../models/users.interface';\nimport { FirebaseServiceProvider } from '../../providers/firebase-service';\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html'\n})\nexport class RegisterPage {\n  @ViewChild(Slides) slides: Slides;\n  public username: string;\n  public password: string;\n  public email: string;\n  users = {} as Users;\n  years = [];\n  startSlide;\n  usersArray;\n  disable = false;\n  errorMessage: any;\n  errorMessageUser: any;\n  localStorageItem;\n  selectedStatus: any;\n  emailValidate = \"[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})\";\n  emailForm = new FormGroup({\n    email: new FormControl()\n  })\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private formBuilder: FormBuilder, private firebaseService: FirebaseServiceProvider) {\n  }\n\n  ionViewDidLoad() {\n    this.selectedStatus = \"Graduate\";\n    this.slides.lockSwipes(true);\n    console.log('ionViewDidLoad RegisterPage');\n    this.years = [{ name: \"Graduate\" }, { name: \"Freshman\" }, { name: \"Sophomore\" }, { name: \"Junior\" }, { name: \"Senior\" }];\n    this.emailForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(this.emailValidate)])\n      ]\n    })\n  }\n\n  ionViewDidEnter() {\n    this.selectedStatus = \"Graduate\";\n    this.slides.lockSwipes(true);\n    this.years = [{ name: \"Freshman\" }, { name: \"Sophomore\" }, { name: \"Junior\" }, { name: \"Senior\" }, { name: \"Graduate\" }];\n    this.startSlide = this.slides.isBeginning();\n    this.emailForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(this.emailValidate)])\n      ]\n    })\n  }\n\n  backlogin() {\n    this.navCtrl.push('LoginFlatPage');\n  }\n\n  slideChanged() {\n    let currentIndex = this.slides.getActiveIndex();\n    this.slides.lockSwipes(true);\n    this.startSlide = this.slides.isBeginning();\n  }\n\n  emailNext() {\n    if (this.emailForm.valid) {\n      this.slides.lockSwipes(false);\n      this.slides.slideNext(500, true);\n    }\n  }\n\n  next() {\n    this.slides.lockSwipes(false);\n    this.slides.slideNext(500, true);\n    this.errorMessage = \" \";\n  }\n\n  prev() {\n    this.slides.lockSwipes(false);\n    this.slides.slidePrev(500, true);\n  }\n\n  chooseImage(event) {\n    console.log(event);\n  }\n\n  checkUser() {\n    this.disable = false;\n    this.errorMessageUser = \"\";\n    this.firebaseService.getAllUsers().snapshotChanges().subscribe(items => {\n      this.usersArray = [];\n      items.forEach(item => {\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.usersArray.push(y);\n      })\n      this.usersArray.forEach(res => {\n        if (this.users.username.toLowerCase() == res.username.toLowerCase()) {\n          this.errorMessageUser = \"This user already exists\";\n          this.disable = true;\n        }\n      })\n    })\n  }\n\n  checkEmail() {\n    this.disable = false;\n    this.errorMessageUser = \"\";\n    this.firebaseService.getAllUsers().snapshotChanges().subscribe(items => {\n      this.usersArray = [];\n      items.forEach(item => {\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.usersArray.push(y);\n      })\n      this.usersArray.forEach(res => {\n        if (this.users.email == res.email) {\n          this.errorMessageUser = \"This email already exists\";\n          this.disable = true;\n        }\n      })\n    })\n  }\n\n  submit(users: Users) {\n    users.points = 0;\n    users.blobFile = \"\";\n    users.image = \"\";\n    users.online = true;\n    this.firebaseService.signUp(users).then(res => {\n      this.errorMessage = this.firebaseService.errorMessage;\n      if (this.errorMessage == null || this.errorMessage == \" \") {\n        this.navCtrl.push('verifyPage', {user: users});\n        this.firebaseService.verifyEmail(users.email);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"]}
{"version":3,"sources":["../../src/pages/viewpost/viewpost.module.ts","../../src/pages/viewpost/viewpost.ts"],"names":["ViewpostPageModule","__decorate","Object","__WEBPACK_IMPORTED_MODULE_0__angular_core__","declarations","__WEBPACK_IMPORTED_MODULE_2__viewpost__","imports","__WEBPACK_IMPORTED_MODULE_1_ionic_angular__","forChild","schemas","ViewpostPage","navCtrl","app","loadingCtrl","firebaseService","modalCtrl","navParams","viewCtrl","this","user","comments","loginUser","textLeft","message","toggled","postUser","comment","heart","taggedItem","finishedLoading","limit","trackByName","index","item","commentid","get","prototype","ionViewDidLoad","_this","loggedUser","userObject","getCommentLastId","snapshotChanges","subscribe","items","arrayLastid","forEach","y","payload","toJSON","key","push","filter","data","postid","arrayLastItem","slice","lastId","$key","console","log","active","getLikePost","arrayLikePosts","elements","liked","getUser","res","arrayUser","postComments","getMoreComments","arrayComments","filteredArrayComments","currentDate","Date","getTime","map","originalTime","time","commentsArray","users","Math","round","getUsers","userid","userProfile","commentObject","image","username","color","taggedText","indexHarsh","indexOf","indexSpace","substring","reverse","userId","userKey","boundClass","q","length","ionViewDidEnter","commentss","arrayItems","deleteComment","deletePost","post","create","content","present","then","getComments","deleteCommentArray","loading","deleteAlert","toString","getSinglePost","arraySinglePost","updatePost","dismiss","likePost","postLike","status","hearts","usersObject","points","updateUser2","alerts","postuserid","action","userImage","userName","alertCustomId","deleteLikePost","signOut","logout","getRootNav","localStorage","removeItem","textLength","str","handleSelection","event","char","closePost","commentPost","alertCustomId2","navTag","modal","onDidDismiss","name","replace","toLowerCase","loadMore","infiniteScroll","setTimeout","complete","selector","template","__WEBPACK_IMPORTED_MODULE_2__providers_firebase_service__"],"mappings":"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","sourcesContent":["import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ViewpostPage } from './viewpost';\n\n@NgModule({\n  declarations: [\n    ViewpostPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ViewpostPage),\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class ViewpostPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/viewpost/viewpost.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, App, ViewController, ModalController, NavController, LoadingController, NavParams } from 'ionic-angular';\nimport { Comments } from '../../models/comments.interface';\nimport { FirebaseServiceProvider } from '../../providers/firebase-service';\nimport { Posts } from '../../models/posts.interface';\nimport { PostsLikes } from '../../models/postlikes.interface';\n/**\n * Generated class for the ViewpostPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-viewpost',\n  templateUrl: 'viewpost.html',\n})\nexport class ViewpostPage {\n  user = [];\n  comments = [];\n  postComments: any;\n  loginUser = {};\n  textLeft: number = 250;\n  message: string = \"\";\n  toggled: boolean = false;\n  postUser: any = {};\n  comment = { comment: \"\" } as Comments;\n  arrayUser: any;\n  arrayComments;\n  boundClass;\n  heart = true;\n  filteredArrayComments;\n  userProfile;\n  commentObject: any;\n  active;\n  arrayLikePosts;\n  commentsArray;\n  taggedItem = false;\n  taggedText: any;\n  liked;\n  users: any;\n  arraySinglePost;\n  deleteCommentArray;\n  currentDate: any;\n  lastId;\n  lastKey;\n  finishedLoading = false;\n  limit: number = 50;\n  arrayLastid;\n  filteredArrayLastid;\n  arrayLastItem;\n  comTime;\n  commentss;\n  loggedUser;\n  userId;\n  arrayItems\n  arrayComment;\n\n  constructor(public navCtrl: NavController, public app: App, public loadingCtrl: LoadingController, private firebaseService: FirebaseServiceProvider, public modalCtrl: ModalController, public navParams: NavParams, public viewCtrl: ViewController) {\n    this.user = this.navParams.get('user');\n  }\n\n  ionViewDidLoad() {\n    this.loggedUser = this.firebaseService.userObject;\n\n    this.firebaseService.getCommentLastId().snapshotChanges().subscribe(items => {\n      this.arrayLastid = [];\n      items.forEach(item => {\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.arrayLastid.push(y);\n      })\n      this.arrayLastid = this.arrayLastid.filter(data => data.postid === this.user['$key']);\n      if (this.arrayLastid != 0) {\n        var arrayLength = this.arrayLastid.length;\n        this.arrayLastItem = this.arrayLastid.slice(0);\n        this.lastId = this.arrayLastItem[0].$key;\n      }\n    })\n\n    console.log('ionViewDidLoad ViewpostPage');\n\n    this.active = true;\n\n    this.firebaseService.getLikePost().snapshotChanges().subscribe(items => {\n      this.arrayLikePosts = [];\n      items.forEach(elements => {\n        var y = elements.payload.toJSON();\n        y['$key'] = elements.key;\n        this.liked = y;\n        this.arrayLikePosts.push(y);\n      })\n\n    })\n\n    this.firebaseService.getUser().snapshotChanges().subscribe(res => {\n      this.arrayUser = [];\n      var y = res.payload.toJSON();\n      y['$key'] = res.key;\n      this.loginUser = y;\n    })\n\n    this.postComments = this.firebaseService.getMoreComments();\n\n    var x = this.postComments.snapshotChanges().subscribe(items => {\n      this.arrayComments = [];\n      this.filteredArrayComments = [];\n      items.forEach(elements => {\n        var y = elements.payload.toJSON();\n        y['$key'] = elements.key;\n        this.arrayComments.push(y);\n      })\n      this.filteredArrayComments = this.arrayComments;\n      this.filteredArrayComments = this.arrayComments.filter(comments => comments.postid == this.user['$key']);\n      this.currentDate = new Date().getTime() / 1000;\n      this.filteredArrayComments.map(res => {\n        var originalTime = res.time;\n        this.commentsArray = [];\n        this.users = res;\n\n        if (this.currentDate - res.time < 59) {\n          res.time = Math.round(this.currentDate - res.time) + 's';\n        }\n\n        else if (this.currentDate - res.time > 59 && this.currentDate - res.time < 3599) {\n          res.time = Math.round((this.currentDate - res.time) / 60) + 'm';\n        }\n\n        else if (this.currentDate - res.time > 3599) {\n          res.time = Math.round((this.currentDate - res.time) / 3600) + 'h';\n        }\n\n\n        var x = this.firebaseService.getUsers(this.users.userid).snapshotChanges().subscribe(items => {\n\n          var y = items.payload.toJSON();\n          y['$key'] = items.key;\n          this.userProfile = y;\n\n          this.commentObject = {\n            commentid: res.$key,\n            postid: res.postid,\n            userid: res.userid,\n            comment: res.comment,\n            image: this.userProfile.image,\n            username: this.userProfile.username,\n            time: res.time,\n            color: false,\n            taggedText: \"\",\n            originalTime: originalTime\n          }\n          var indexHarsh = this.commentObject.comment.indexOf('#');\n\n          if (this.commentObject.comment.indexOf('#') > -1) {\n            this.taggedItem = true;\n            var indexSpace = this.commentObject.comment.indexOf(' ', indexHarsh);\n\n            this.taggedText = this.commentObject.comment.substring(indexHarsh, indexSpace);\n            this.commentObject.taggedText = this.taggedText;\n          }\n\n          this.commentsArray.push(this.commentObject);\n          this.commentsArray = this.commentsArray.reverse();\n          this.userId = this.firebaseService.userKey;\n\n          this.boundClass = {\n            heart: this.heart\n          }\n\n          this.commentObject.color = \"not active\";\n          for (var q = 0; q < this.arrayLikePosts.length; q++) {\n            if (this.arrayLikePosts[q].postid === this.commentObject.$key) {\n\n              if (this.arrayLikePosts[q].userid === this.firebaseService.userKey) {\n                this.commentObject.color = \"active\";\n              }\n\n            } else { console.log('no') }\n\n          }\n        })\n      })\n    })\n\n  }\n\n  trackByName = (index, item) => {\n    return item.commentid;\n  }\n\n  ionViewDidEnter() {\n    this.currentDate = new Date().getTime() / 1000;\n    this.commentss = this.firebaseService.getMoreComments(this.limit);\n\n    var x = this.commentss.snapshotChanges().subscribe(items => {\n      this.arrayItems = [];\n      items.forEach(elements => {\n        var y = elements.payload.toJSON();\n        y['$key'] = elements.key;\n        this.arrayItems.push(y);\n      })\n      this.arrayItems.map(res => {\n        if (this.currentDate - res.time > 3600 * 12) {\n          this.firebaseService.deleteComment(res.$key);\n        }\n      });\n    });\n  }\n\n  deletePost(post: Posts) {\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n\n    loading.present().then(res => {\n      this.firebaseService.deletePost(post.$key);\n      this.firebaseService.getComments().snapshotChanges().subscribe(items => {\n        this.deleteCommentArray = [];\n        items.forEach(item => {\n          var y = item.payload.toJSON();\n          y[\"key\"] = item.key;\n          this.deleteCommentArray.push(y);\n        });\n        this.deleteCommentArray = this.deleteCommentArray.filter(data => data.postid == post.$key);\n        this.deleteCommentArray.map(res => {\n          this.firebaseService.deleteComment(res.key);\n        })\n      })\n      this.navCtrl.push('WallPage');\n    });\n\n  }\n\n\n  deleteComment(comment: Comments) {\n    console.log(comment.time);\n    console.log(comment.$key);\n\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n\n    loading.present().then(res => {\n      this.firebaseService.deleteComment(comment[\"commentid\"]);\n      this.firebaseService.deleteAlert((comment[\"originalTime\"] * 1000).toString() + this.firebaseService.userKey);\n\n      this.postComments = this.firebaseService.getComments();\n      var x = this.postComments.snapshotChanges().subscribe(items => {\n        this.arrayComments = [];\n        this.filteredArrayComments = [];\n        items.forEach(elements => {\n          var y = elements.payload.toJSON();\n          y['$key'] = elements.key;\n          this.arrayComments.push(y);\n        });\n      });\n\n      this.firebaseService.getSinglePost(comment.postid).snapshotChanges().subscribe(item => {\n        console.log(item);\n        this.arraySinglePost = [];\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.arrayComments = this.arrayComments.filter(data => data.postid == comment.postid);\n        y[\"comments\"] = this.arrayComments.length;\n        this.firebaseService.updatePost(y);\n      });\n    })\n\n    loading.dismiss();\n\n  }\n\n\n  likePost(post: Posts) {\n    console.log(post);\n    var postLike: PostsLikes;\n    postLike = {\n      userid: this.firebaseService.userKey,\n      postid: post.$key,\n      status: true\n    }\n\n    if (post[\"color\"] != \"active\") {\n\n      this.firebaseService.likePost(postLike);\n\n      this.active = true;\n\n      if (postLike.postid === post.$key) {\n\n        if (postLike.userid === this.firebaseService.userKey) {\n          post[\"color\"] = \"active\";\n          post.hearts += 1;\n\n          this.firebaseService.usersObject.points += 1;\n          this.firebaseService.updateUser2(this.firebaseService.usersObject);\n          this.firebaseService.updatePost(post);\n          var alerts = {\n            postid: post.$key,\n            postuserid: post.userid,\n            action: 'md-heart',\n            color: 'active',\n            status: true,\n            time: new Date().getTime() / 1000,\n            commentid: '',\n            userid: this.firebaseService.userKey,\n            image: this.firebaseService.userImage,\n            username: this.firebaseService.userName,\n            comment: '',\n            message: 'liked your post',\n            post: post.content\n          }\n          this.firebaseService.alertCustomId(alerts);\n        }\n\n      } else { console.log('no') }\n\n    }\n    else {\n      post[\"color\"] = \"not active\";\n      this.firebaseService.deleteLikePost((post.$key + this.firebaseService.userKey).toString());\n      this.firebaseService.deleteAlert(post.$key + this.firebaseService.userKey);\n      post.hearts -= 1;\n      this.firebaseService.updatePost(post);\n    }\n\n  }\n\n  signOut() {\n    console.log(\"Logged Out\");\n    this.viewCtrl.dismiss();\n    this.firebaseService.logout();\n    this.app.getRootNav().push(\"LoginFlatPage\");\n    localStorage.removeItem('userId');\n  }\n\n\n  textLength(str) {\n    this.textLeft = 250 - str.length;\n  }\n\n  handleSelection(event) {\n    this.message = this.message + \" \" + event.char;\n  }\n  closePost() {\n    this.viewCtrl.dismiss();\n  }\n\n  commentPost(comment: Comments) {\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n\n    loading.present().then(res => {\n      comment.postid = this.user['$key'];\n      comment.userid = this.firebaseService.userKey;\n      comment.time = new Date().getTime() / 1000;\n      this.firebaseService.comment(comment);\n\n      var alerts = {\n        postid: this.user['$key'],\n        postuserid: this.user['userid'],\n        action: 'md-chatbubbles',\n        color: 'activecomment',\n        status: true,\n        time: new Date().getTime() / 1000,\n        commentid: '',\n        userid: this.firebaseService.userKey,\n        image: this.firebaseService.userImage,\n        username: this.firebaseService.userName,\n        comment: '',\n        message: 'commented on your post',\n        post: comment.comment\n      }\n      this.firebaseService.alertCustomId2(alerts);\n\n      this.postComments = this.firebaseService.getComments();\n      var x = this.postComments.snapshotChanges().subscribe(items => {\n        this.arrayComments = [];\n        this.filteredArrayComments = [];\n        items.forEach(elements => {\n          var y = elements.payload.toJSON();\n          y['$key'] = elements.key;\n          this.arrayComments.push(y);\n        });\n      });\n\n      this.updatePost(comment);\n    })\n    loading.dismiss();\n  }\n\n  updatePost(comment) {\n    this.firebaseService.getSinglePost(comment.postid).snapshotChanges().subscribe(item => {\n      if (item.key != null) {\n        this.arraySinglePost = [];\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.arrayComments = this.arrayComments.filter(data => data.postid == comment.postid);\n        y[\"comments\"] = this.arrayComments.length;\n\n        this.firebaseService.usersObject.points += 1;\n        this.firebaseService.updateUser2(this.firebaseService.usersObject);\n        this.firebaseService.updatePost(y);\n      }\n    });\n  }\n\n  navTag() {\n    let modal = this.modalCtrl.create('TagboardPage');\n    modal.onDidDismiss((data) => {\n      if (data) {\n        data.name = data.name.replace(/ +/g, \"\");\n        this.comment.comment = this.comment.comment + ' #' + data.name.toLowerCase() + ' ';\n      }\n    })\n    modal.present();\n  }\n\n  //optional pagination method\n  loadMore(infiniteScroll) {\n\n\n    this.limit += 50;\n    setTimeout(() => {\n      this.ionViewDidLoad();\n\n      console.log('Async operation has ended');\n      infiniteScroll.complete();\n    }, 1000);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/viewpost/viewpost.ts"]}
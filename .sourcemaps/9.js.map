{"version":3,"sources":["../../src/pages/viewalert/viewalert.module.ts","../../src/pages/viewalert/viewalert.ts"],"names":["ViewalertPageModule","__decorate","Object","__WEBPACK_IMPORTED_MODULE_0__angular_core__","declarations","__WEBPACK_IMPORTED_MODULE_2__viewalert__","imports","__WEBPACK_IMPORTED_MODULE_1_ionic_angular__","forChild","ViewalertPage","navCtrl","loadingCtrl","firebaseService","modalCtrl","navParams","viewCtrl","this","notify","posts","comments","loginUser","textLeft","message","toggled","heart","comment","taggedItem","limit","user","trackByName","index","item","commentid","get","console","log","post","currentDate","Date","getTime","seconds","Math","round","minutes","hours","prototype","ionViewDidLoad","_this","undefined","getUser","snapshotChanges","subscribe","arrayItem","y","payload","toJSON","key","getCommentLastId","items","arrayLastid","forEach","push","filter","data","postid","arrayLastItem","slice","lastId","$key","active","getLikePost","arrayLikePosts","elements","liked","res","arrayUser","postComments","getMoreComments","arrayComments","filteredArrayComments","map","originalTime","time","commentsArray","users","getUsers","userid","userProfile","commentObject","image","username","color","taggedText","indexHarsh","indexOf","indexSpace","substring","reverse","boundClass","q","length","userKey","ionViewDidEnter","deleteComment","loading","create","content","present","then","deleteAlert","toString","getComments","getSinglePost","arraySinglePost","updatePost","dismiss","likePost","postLike","status","hearts","alerts","postuserid","action","userImage","userName","alertCustomId","deleteLikePost","deletePost","deletePostComment","commentPost","alertCustomId2","closePost","textLength","str","handleSelection","event","char","navTag","modal","onDidDismiss","name","replace","toLowerCase","selector","template","__WEBPACK_IMPORTED_MODULE_2__providers_firebase_service__"],"mappings":"+gBAYAA,EAAA,WAAA,SAAAA,KAAkC,OAArBA,EAAmBC,GAR/BC,OAAAC,EAAA,SAAAD,EACCE,cACEC,EAAA,GAEFC,SACEC,EAAA,EAAgBC,SAASH,EAAA,OAGhBL,GAAb,mkBCOAS,EAAA,WA0CE,SAAAA,EAAmBC,EAA+BC,EAAwCC,EAAiDC,EAAmCC,EAA6BC,GAAxLC,KAAAN,QAAAA,EAA+BM,KAAAL,YAAAA,EAAwCK,KAAAJ,gBAAAA,EAAiDI,KAAAH,UAAAA,EAAmCG,KAAAF,UAAAA,EAA6BE,KAAAD,SAAAA,EAzC3MC,KAAAC,UAEAD,KAAAE,SACAF,KAAAG,YACAH,KAAAI,aACAJ,KAAAK,SAAmB,IACnBL,KAAAM,QAAkB,GAClBN,KAAAO,SAAmB,EAmBnBP,KAAAQ,OAAQ,EAERR,KAAAS,SAAYA,QAAS,IAGrBT,KAAAU,YAAa,EAGbV,KAAAW,MAAgB,GAChBX,KAAAY,QA8JAZ,KAAAa,YAAc,SAACC,EAAOC,GACpB,OAAOA,EAAKC,WAxJZhB,KAAKC,OAASD,KAAKF,UAAUmB,IAAI,UACjCC,QAAQC,IAAInB,KAAKC,QACjBD,KAAKY,KAAOZ,KAAKF,UAAUmB,IAAI,QAC/BjB,KAAKoB,KAAOpB,KAAKF,UAAUmB,IAAI,QAG/BjB,KAAKqB,aAAc,IAAIC,MAAOC,UAAY,IACtCvB,KAAKqB,YAAcrB,KAAKoB,KAAW,KAAI,IACzCpB,KAAKwB,SAAU,EACfxB,KAAKoB,KAAW,KAAIK,KAAKC,MAAM1B,KAAKqB,YAAcrB,KAAKoB,KAAW,MAAK,KAGhEpB,KAAKqB,YAAcrB,KAAKoB,KAAW,KAAI,IAAMpB,KAAKqB,YAAcrB,KAAKoB,KAAW,KAAI,MAC3FpB,KAAK2B,SAAU,EACf3B,KAAKoB,KAAW,KAAIK,KAAKC,OAAO1B,KAAKqB,YAAcrB,KAAKoB,KAAW,MAAK,IAAM,KAGvEpB,KAAKqB,YAAcrB,KAAKoB,KAAW,KAAI,OAC9CpB,KAAK4B,OAAQ,EACb5B,KAAKoB,KAAW,KAAIK,KAAKC,OAAO1B,KAAKqB,YAAcrB,KAAKoB,KAAW,MAAK,MAAQ,KAElFF,QAAQC,IAAInB,KAAKoB,aAGnB3B,EAAAoC,UAAAC,eAAA,WAAA,IAAAC,EAAA/B,KACEkB,QAAQC,IAAI,qCAC0Ba,GAAlChC,KAAKJ,gBAAgBqC,WAA4D,MAAlCjC,KAAKJ,gBAAgBqC,WACtEjC,KAAKJ,gBAAgBqC,UAAUC,kBAAkBC,UAAU,SAAApB,GACzDgB,EAAKK,aACL,IAAIC,EAAItB,EAAKuB,QAAQC,SACrBF,EAAQ,KAAItB,EAAKyB,IACjBT,EAAK3B,UAAYiC,IAGrBrC,KAAKJ,gBAAgB6C,mBAAmBP,kBAAkBC,UAAU,SAAAO,GAQlE,GAPAX,EAAKY,eACLD,EAAME,QAAQ,SAAA7B,GACZ,IAAIsB,EAAItB,EAAKuB,QAAQC,SACrBF,EAAQ,KAAItB,EAAKyB,IACjBT,EAAKY,YAAYE,KAAKR,KAExBN,EAAKY,YAAcZ,EAAKY,YAAYG,OAAO,SAAAC,GAAQ,OAAAA,EAAKC,SAAWjB,EAAKX,KAAW,OAC3D,GAApBW,EAAKY,YAAkB,CAEzBZ,EAAKkB,cAAgBlB,EAAKY,YAAYO,MAAM,GAC5CnB,EAAKoB,OAASpB,EAAKkB,cAAc,GAAGG,QAGxCpD,KAAKqD,QAAS,EAEdrD,KAAKJ,gBAAgB0D,cAAcpB,kBAAkBC,UAAU,SAAAO,GAC7DX,EAAKwB,kBACLb,EAAME,QAAQ,SAAAY,GACZ,IAAInB,EAAImB,EAASlB,QAAQC,SACzBF,EAAQ,KAAImB,EAAShB,IACrBT,EAAK0B,MAAQpB,EACbN,EAAKwB,eAAeV,KAAKR,OAK7BrC,KAAKJ,gBAAgBqC,UAAUC,kBAAkBC,UAAU,SAAAuB,GACzD3B,EAAK4B,aACL,IAAItB,EAAIqB,EAAIpB,QAAQC,SACpBF,EAAQ,KAAIqB,EAAIlB,IAChBT,EAAK3B,UAAYiC,IAGnBrC,KAAK4D,aAAe5D,KAAKJ,gBAAgBiE,kBAEjC7D,KAAK4D,aAAa1B,kBAAkBC,UAAU,SAAAO,GACpDX,EAAK+B,iBACL/B,EAAKgC,yBACLrB,EAAME,QAAQ,SAAAY,GACZ,IAAInB,EAAImB,EAASlB,QAAQC,SACzBF,EAAQ,KAAImB,EAAShB,IACrBT,EAAK+B,cAAcjB,KAAKR,KAE1BN,EAAKgC,sBAAwBhC,EAAK+B,cAClC/B,EAAKgC,sBAAwBhC,EAAK+B,cAAchB,OAAO,SAAA3C,GAAY,OAAAA,EAAS6C,QAAUjB,EAAKX,KAAW,OACtGW,EAAKV,aAAc,IAAIC,MAAOC,UAAY,IAC1CQ,EAAKgC,sBAAsBC,IAAI,SAAAN,GAC7B,IAAIO,EAAeP,EAAIQ,KACvBnC,EAAKoC,iBACLpC,EAAKqC,MAAQV,EAET3B,EAAKV,YAAcqC,EAAIQ,KAAO,GAChCR,EAAIQ,KAAOzC,KAAKC,MAAMK,EAAKV,YAAcqC,EAAIQ,MAAQ,IAG9CnC,EAAKV,YAAcqC,EAAIQ,KAAO,IAAMnC,EAAKV,YAAcqC,EAAIQ,KAAO,KACzER,EAAIQ,KAAOzC,KAAKC,OAAOK,EAAKV,YAAcqC,EAAIQ,MAAQ,IAAM,IAGrDnC,EAAKV,YAAcqC,EAAIQ,KAAO,OACrCR,EAAIQ,KAAOzC,KAAKC,OAAOK,EAAKV,YAAcqC,EAAIQ,MAAQ,MAAQ,KAIxDnC,EAAKnC,gBAAgByE,SAAStC,EAAKqC,MAAME,QAAQpC,kBAAkBC,UAAU,SAAAO,GAEnF,IAAIL,EAAIK,EAAMJ,QAAQC,SACtBF,EAAQ,KAAIK,EAAMF,IAClBT,EAAKwC,YAAclC,EAEnBN,EAAKyC,eACHxD,UAAW0C,EAAIN,KACfJ,OAAQU,EAAIV,OACZsB,OAAQZ,EAAIY,OACZ7D,QAASiD,EAAIjD,QACbgE,MAAO1C,EAAKwC,YAAYE,MACxBC,SAAU3C,EAAKwC,YAAYG,SAC3BR,KAAMR,EAAIQ,KACVS,OAAO,EACPC,WAAY,GACZX,aAAcA,GAEhB,IAAIY,EAAa9C,EAAKyC,cAAc/D,QAAQqE,QAAQ,KAEpD,GAAI/C,EAAKyC,cAAc/D,QAAQqE,QAAQ,MAAQ,EAAG,CAChD/C,EAAKrB,YAAa,EAClB,IAAIqE,EAAahD,EAAKyC,cAAc/D,QAAQqE,QAAQ,IAAKD,GAEzD9C,EAAK6C,WAAa7C,EAAKyC,cAAc/D,QAAQuE,UAAUH,EAAYE,GACnEhD,EAAKyC,cAAcI,WAAa7C,EAAK6C,WAGvC7C,EAAKoC,cAActB,KAAKd,EAAKyC,eAC7BzC,EAAKoC,cAAgBpC,EAAKoC,cAAcc,UAExClD,EAAKmD,YACH1E,MAAOuB,EAAKvB,OAGduB,EAAKyC,cAAcG,MAAQ,aAC3B,IAAK,IAAIQ,EAAI,EAAGA,EAAIpD,EAAKwB,eAAe6B,OAAQD,IAC1CpD,EAAKwB,eAAe4B,GAAGnC,SAAWjB,EAAKyC,cAAcpB,KAEnDrB,EAAKwB,eAAe4B,GAAGb,SAAWvC,EAAKnC,gBAAgByF,UACzDtD,EAAKyC,cAAcG,MAAQ,UAGtBzD,QAAQC,IAAI,aAa/B1B,EAAAoC,UAAAyD,gBAAA,aAmBA7F,EAAAoC,UAAA0D,cAAA,SAAc9E,GAAd,IAAAsB,EAAA/B,KACEkB,QAAQC,IAAIV,EAAQyD,MACpBhD,QAAQC,IAAIV,EAAQ2C,MAEpB,IAAIoC,EAAUxF,KAAKL,YAAY8F,QAC7BC,QAAS,mBAGVF,EAAQG,UAAUC,KAAK,SAAAlC,GACtB3B,EAAKnC,gBAAgB2F,cAAc9E,EAAmB,WACtDsB,EAAKnC,gBAAgBiG,aAAuC,IAA1BpF,EAAsB,cAAUqF,WAAa/D,EAAKnC,gBAAgByF,SAEpGtD,EAAK6B,aAAe7B,EAAKnC,gBAAgBmG,cACjChE,EAAK6B,aAAa1B,kBAAkBC,UAAU,SAAAO,GACpDX,EAAK+B,iBACL/B,EAAKgC,yBACLrB,EAAME,QAAQ,SAAAY,GACZ,IAAInB,EAAImB,EAASlB,QAAQC,SACzBF,EAAQ,KAAImB,EAAShB,IACrBT,EAAK+B,cAAcjB,KAAKR,OAI5BN,EAAKnC,gBAAgBoG,cAAcvF,EAAQuC,QAAQd,kBAAkBC,UAAU,SAAApB,GAC7EG,QAAQC,IAAIJ,GACZgB,EAAKkE,mBACL,IAAI5D,EAAItB,EAAKuB,QAAQC,SACrBF,EAAQ,KAAItB,EAAKyB,IACjBT,EAAK+B,cAAgB/B,EAAK+B,cAAchB,OAAO,SAAAC,GAAQ,OAAAA,EAAKC,QAAUvC,EAAQuC,SAC9EX,EAAY,SAAIN,EAAK+B,cAAcsB,OACnCrD,EAAKnC,gBAAgBsG,WAAW7D,OAGpCmD,EAAQW,UACRnG,KAAKD,SAASoG,WAGhB1G,EAAAoC,UAAAuE,SAAA,SAAShF,GACPF,QAAQC,IAAIC,GACX,IAAIiF,EAOL,GANAA,GACE/B,OAAQtE,KAAKJ,gBAAgByF,QAC7BrC,OAAQ5B,EAAKgC,KACbkD,QAAQ,GAGW,UAAjBlF,EAAY,MAMd,GAJApB,KAAKJ,gBAAgBwG,SAASC,GAE9BrG,KAAKqD,QAAS,EAEVgD,EAASrD,SAAW5B,EAAKgC,MAE3B,GAAIiD,EAAS/B,SAAWtE,KAAKJ,gBAAgByF,QAAS,CACpDjE,EAAY,MAAI,SAChBA,EAAKmF,QAAU,EACfvG,KAAKJ,gBAAgBsG,WAAW9E,GAChC,IAAIoF,GACFxD,OAAQ5B,EAAKgC,KACbqD,WAAYrF,EAAKkD,OACjBoC,OAAQ,WACR/B,MAAO,SACPT,MAAM,IAAI5C,MAAOC,UAAY,IAC7BP,UAAW,GACXsD,OAAQtE,KAAKJ,gBAAgByF,QAC7BZ,MAAOzE,KAAKJ,gBAAgB+G,UAC5BjC,SAAU1E,KAAKJ,gBAAgBgH,SAC/BnG,QAAS,GACTH,QAAS,kBACTc,KAAMA,EAAKsE,SAEb1F,KAAKJ,gBAAgBiH,cAAcL,SAG9BtF,QAAQC,IAAI,WAIrBC,EAAY,MAAI,aAChBpB,KAAKJ,gBAAgBkH,gBAAgB1F,EAAKgC,KAAOpD,KAAKJ,gBAAgByF,SAASS,YAC/E9F,KAAKJ,gBAAgBiG,YAAYzE,EAAKgC,KAAOpD,KAAKJ,gBAAgByF,SAClEjE,EAAKmF,QAAU,EACfvG,KAAKJ,gBAAgBsG,WAAW9E,GAElCpB,KAAKD,SAASoG,WAGhB1G,EAAAoC,UAAAkF,WAAA,SAAW3F,GAETpB,KAAKgH,kBAAkB5F,IAIzB3B,EAAAoC,UAAAmF,kBAAA,SAAkB5F,GAAlB,IAAAW,EAAA/B,KACeA,KAAKL,YAAY8F,QAC5BC,QAAS,mBAGHC,UAAUC,KAAK,SAAAlC,GACrB3B,EAAKnC,gBAAgBmH,WAAW3F,EAAKgC,MAcrCrB,EAAKrC,QAAQmD,KAAK,iBAKtBpD,EAAAoC,UAAAoF,YAAA,SAAYxG,GAAZ,IAAAsB,EAAA/B,KACMwF,EAAUxF,KAAKL,YAAY8F,QAC7BC,QAAS,mBAGXF,EAAQG,UAAUC,KAAK,SAAAlC,GACrBjD,EAAQuC,OAASjB,EAAKX,KAAW,KACjCX,EAAQ6D,OAASvC,EAAKnC,gBAAgByF,QACtC5E,EAAQyD,MAAO,IAAI5C,MAAOC,UAAY,IACtCQ,EAAKnC,gBAAgBa,QAAQA,GAE7B,IAAI+F,GACFxD,OAAQjB,EAAKX,KAAW,KACxBsF,OAAQ,iBACR/B,MAAO,gBACPT,MAAM,IAAI5C,MAAOC,UAAY,IAC7BP,UAAW,GACXyF,WAAY1E,EAAKX,KAAa,OAC9BkD,OAAQvC,EAAKnC,gBAAgByF,QAC7BZ,MAAO1C,EAAKnC,gBAAgB+G,UAC5BjC,SAAU3C,EAAKnC,gBAAgBgH,SAC/BnG,QAAS,GACTH,QAAS,yBACTc,KAAMX,EAAQA,SAEhBsB,EAAKnC,gBAAgBsH,eAAeV,GAEpCzE,EAAK6B,aAAe7B,EAAKnC,gBAAgBmG,cACjChE,EAAK6B,aAAa1B,kBAAkBC,UAAU,SAAAO,GACpDX,EAAK+B,iBACL/B,EAAKgC,yBACLrB,EAAME,QAAQ,SAAAY,GACZ,IAAInB,EAAImB,EAASlB,QAAQC,SACzBF,EAAQ,KAAImB,EAAShB,IACrBT,EAAK+B,cAAcjB,KAAKR,OAI5BN,EAAKmE,WAAWzF,KAElB+E,EAAQW,WAGV1G,EAAAoC,UAAAqE,WAAA,SAAWzF,GAAX,IAAAsB,EAAA/B,KACEA,KAAKJ,gBAAgBoG,cAAcvF,EAAQuC,QAAQd,kBAAkBC,UAAU,SAAApB,GAC7E,GAAgB,MAAZA,EAAKyB,IAAa,CACpBT,EAAKkE,mBACL,IAAI5D,EAAItB,EAAKuB,QAAQC,SACrBF,EAAQ,KAAItB,EAAKyB,IACjBT,EAAK+B,cAAgB/B,EAAK+B,cAAchB,OAAO,SAAAC,GAAQ,OAAAA,EAAKC,QAAUvC,EAAQuC,SAC9EX,EAAY,SAAIN,EAAK+B,cAAcsB,OACnCrD,EAAKnC,gBAAgBsG,WAAW7D,OAOtC5C,EAAAoC,UAAAsF,UAAA,WACEnH,KAAKD,SAASoG,WAGhB1G,EAAAoC,UAAAuF,WAAA,SAAWC,GACTrH,KAAKK,SAAW,IAAMgH,EAAIjC,OAC1BlE,QAAQC,IAAInB,KAAKK,WAGnBZ,EAAAoC,UAAAyF,gBAAA,SAAgBC,GACdvH,KAAKM,QAAUN,KAAKM,QAAU,IAAMiH,EAAMC,KAC1CtG,QAAQC,IAAInB,KAAKM,UAGnBb,EAAAoC,UAAA4F,OAAA,WAAA,IAAA1F,EAAA/B,KACM0H,EAAQ1H,KAAKH,UAAU4F,OAAO,gBAClCiC,EAAMC,aAAa,SAAC5E,GACdA,IACFA,EAAK6E,KAAO7E,EAAK6E,KAAKC,QAAQ,MAAO,IACrC9F,EAAKzB,QAAUyB,EAAKzB,QAAU,KAAOyC,EAAK6E,KAAKE,iBAGnDJ,EAAM/B,WAhaGlG,EAAaR,GAJzBC,OAAAC,EAAA,UAAAD,EACC6I,SAAU,iBAAgBC,SAAA,+7KAE1B,qBAAAzI,EAAA,EAAAA,EAAA,EAAA0I,EAAA,EAAA1I,EAAA,EAAAA,EAAA,EAAAA,EAAA,QACF","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ViewalertPage } from './viewalert';\n\n@NgModule({\n  declarations: [\n    ViewalertPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ViewalertPage),\n  ],\n})\nexport class ViewalertPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/viewalert/viewalert.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, ViewController, ModalController, LoadingController, NavController, NavParams } from 'ionic-angular';\nimport { FirebaseServiceProvider } from '../../providers/firebase-service';\nimport { Comments } from '../../models/comments.interface';\nimport { Posts } from '../../models/posts.interface';\nimport { PostsLikes } from '../../models/postlikes.interface';\n\n/**\n * Generated class for the ViewalertPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-viewalert',\n  templateUrl: 'viewalert.html',\n})\nexport class ViewalertPage {\n  notify = [];\n  post: any;\n  posts = [];\n  comments = [];\n  loginUser = {};\n  textLeft: number = 250;\n  message: string = \"\";\n  toggled: boolean = false;\n  arrayItem: any;\n  arrayLastid;\n  active;\n  filteredArrayLastid;\n  deleteCommentArray;\n  lastId;\n  arrayLastItem;\n  arrayLikePosts;\n  arrayUser: any;\n  users: any;\n  liked;\n  currentDate: any;\n  postComments: any;\n  arrayComments;\n  filteredArrayComments;\n  userProfile;\n  commentObject: any;\n  commentss;\n  heart = true;\n  taggedText: any;\n  comment = { comment: \"\" } as Comments;\n  commentsArray;\n  boundClass;\n  taggedItem = false;\n  arraySinglePost;\n  arrayItems;\n  limit: number = 50;\n  user = [];\n  minutes;\n  seconds;\n  hours;\n  arrayPostLike;\n\n  constructor(public navCtrl: NavController, public loadingCtrl: LoadingController, private firebaseService: FirebaseServiceProvider, public modalCtrl: ModalController, public navParams: NavParams, public viewCtrl: ViewController) {\n    this.notify = this.navParams.get('notify');\n    console.log(this.notify);\n    this.user = this.navParams.get('user');\n    this.post = this.navParams.get('post');\n\n    //Change time to hours, minutes, seconds\n    this.currentDate = new Date().getTime() / 1000;\n    if (this.currentDate - this.post['time'] < 59) {\n      this.seconds = true;\n      this.post['time'] = Math.round(this.currentDate - this.post['time']) + 's';\n    }\n\n    else if (this.currentDate - this.post['time'] > 59 && this.currentDate - this.post['time'] < 3599) {\n      this.minutes = true;\n      this.post['time'] = Math.round((this.currentDate - this.post['time']) / 60) + 'm';\n    }\n\n    else if (this.currentDate - this.post['time'] > 3599) {\n      this.hours = true;\n      this.post['time'] = Math.round((this.currentDate - this.post['time']) / 3600) + 'h';\n    }\n    console.log(this.post);\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ViewalertPage');\n    if (this.firebaseService.getUser() != undefined || this.firebaseService.getUser() != null) {\n      this.firebaseService.getUser().snapshotChanges().subscribe(item => {\n        this.arrayItem = [];\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.loginUser = y;\n      })\n    }\n    this.firebaseService.getCommentLastId().snapshotChanges().subscribe(items => {\n      this.arrayLastid = [];\n      items.forEach(item => {\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.arrayLastid.push(y);\n      })\n      this.arrayLastid = this.arrayLastid.filter(data => data.postid === this.post['$key']);\n      if (this.arrayLastid != 0) {\n        var arrayLength = this.arrayLastid.length;\n        this.arrayLastItem = this.arrayLastid.slice(0);\n        this.lastId = this.arrayLastItem[0].$key;\n      }\n    })\n    this.active = true;\n\n    this.firebaseService.getLikePost().snapshotChanges().subscribe(items => {\n      this.arrayLikePosts = [];\n      items.forEach(elements => {\n        var y = elements.payload.toJSON();\n        y['$key'] = elements.key;\n        this.liked = y;\n        this.arrayLikePosts.push(y);\n      })\n\n    })\n\n    this.firebaseService.getUser().snapshotChanges().subscribe(res => {\n      this.arrayUser = [];\n      var y = res.payload.toJSON();\n      y['$key'] = res.key;\n      this.loginUser = y;\n    })\n\n    this.postComments = this.firebaseService.getMoreComments();\n\n    var x = this.postComments.snapshotChanges().subscribe(items => {\n      this.arrayComments = [];\n      this.filteredArrayComments = [];\n      items.forEach(elements => {\n        var y = elements.payload.toJSON();\n        y['$key'] = elements.key;\n        this.arrayComments.push(y);\n      })\n      this.filteredArrayComments = this.arrayComments;\n      this.filteredArrayComments = this.arrayComments.filter(comments => comments.postid == this.post['$key']);\n      this.currentDate = new Date().getTime() / 1000;\n      this.filteredArrayComments.map(res => {\n        var originalTime = res.time;\n        this.commentsArray = [];\n        this.users = res;\n\n        if (this.currentDate - res.time < 59) {\n          res.time = Math.round(this.currentDate - res.time) + 's';\n        }\n\n        else if (this.currentDate - res.time > 59 && this.currentDate - res.time < 3599) {\n          res.time = Math.round((this.currentDate - res.time) / 60) + 'm';\n        }\n\n        else if (this.currentDate - res.time > 3599) {\n          res.time = Math.round((this.currentDate - res.time) / 3600) + 'h';\n        }\n\n\n        var x = this.firebaseService.getUsers(this.users.userid).snapshotChanges().subscribe(items => {\n\n          var y = items.payload.toJSON();\n          y['$key'] = items.key;\n          this.userProfile = y;\n\n          this.commentObject = {\n            commentid: res.$key,\n            postid: res.postid,\n            userid: res.userid,\n            comment: res.comment,\n            image: this.userProfile.image,\n            username: this.userProfile.username,\n            time: res.time,\n            color: false,\n            taggedText: \"\",\n            originalTime: originalTime\n          }\n          var indexHarsh = this.commentObject.comment.indexOf('#');\n\n          if (this.commentObject.comment.indexOf('#') > -1) {\n            this.taggedItem = true;\n            var indexSpace = this.commentObject.comment.indexOf(' ', indexHarsh);\n\n            this.taggedText = this.commentObject.comment.substring(indexHarsh, indexSpace);\n            this.commentObject.taggedText = this.taggedText;\n          }\n\n          this.commentsArray.push(this.commentObject);\n          this.commentsArray = this.commentsArray.reverse();\n\n          this.boundClass = {\n            heart: this.heart\n          }\n\n          this.commentObject.color = \"not active\";\n          for (var q = 0; q < this.arrayLikePosts.length; q++) {\n            if (this.arrayLikePosts[q].postid === this.commentObject.$key) {\n\n              if (this.arrayLikePosts[q].userid === this.firebaseService.userKey) {\n                this.commentObject.color = \"active\";\n              }\n\n            } else { console.log('no') }\n\n          }\n        })\n      })\n    })\n\n  }\n\n  trackByName = (index, item) => {\n    return item.commentid;\n  }\n\n  ionViewDidEnter() {\n    /* this.currentDate = new Date().getTime() / 1000;\n    this.commentss = this.firebaseService.getMoreComments(this.limit);\n\n    var x = this.commentss.snapshotChanges().subscribe(items => {\n      this.arrayItems = [];\n      items.forEach(elements => {\n        var y = elements.payload.toJSON();\n        y['$key'] = elements.key;\n        this.arrayItems.push(y);\n      })\n      this.arrayItems.map(res => {\n        if (this.currentDate - res.time > 3600 * 12) {\n          this.firebaseService.deleteComment(res.$key);\n        }\n      });\n    }); */\n  }\n\n  deleteComment(comment: Comments) {\n    console.log(comment.time);\n    console.log(comment.$key);\n\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n\n     loading.present().then(res => {\n      this.firebaseService.deleteComment(comment[\"commentid\"]);\n      this.firebaseService.deleteAlert((comment[\"originalTime\"] * 1000).toString() + this.firebaseService.userKey);\n\n      this.postComments = this.firebaseService.getComments();\n      var x = this.postComments.snapshotChanges().subscribe(items => {\n        this.arrayComments = [];\n        this.filteredArrayComments = [];\n        items.forEach(elements => {\n          var y = elements.payload.toJSON();\n          y['$key'] = elements.key;\n          this.arrayComments.push(y);\n        });\n      });\n\n      this.firebaseService.getSinglePost(comment.postid).snapshotChanges().subscribe(item => {\n        console.log(item);\n        this.arraySinglePost = [];\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.arrayComments = this.arrayComments.filter(data => data.postid == comment.postid);\n        y[\"comments\"] = this.arrayComments.length;\n        this.firebaseService.updatePost(y);\n      });\n    })\n    loading.dismiss();\n    this.viewCtrl.dismiss();\n  }\n\n  likePost(post: Posts) {\n    console.log(post);\n     var postLike: PostsLikes;\n    postLike = {\n      userid: this.firebaseService.userKey,\n      postid: post.$key,\n      status: true\n    }\n\n    if (post[\"color\"] != \"active\") {\n\n      this.firebaseService.likePost(postLike);\n\n      this.active = true;\n\n      if (postLike.postid === post.$key) {\n\n        if (postLike.userid === this.firebaseService.userKey) {\n          post[\"color\"] = \"active\";\n          post.hearts += 1;\n          this.firebaseService.updatePost(post);\n          var alerts = {\n            postid: post.$key,\n            postuserid: post.userid,\n            action: 'md-heart',\n            color: 'active',\n            time: new Date().getTime() / 1000,\n            commentid: '',\n            userid: this.firebaseService.userKey,\n            image: this.firebaseService.userImage,\n            username: this.firebaseService.userName,\n            comment: '',\n            message: 'liked your post',\n            post: post.content\n          }\n          this.firebaseService.alertCustomId(alerts);\n        } \n\n      } else { console.log('no') }\n\n    }\n   else {\n      post[\"color\"] = \"not active\";\n      this.firebaseService.deleteLikePost((post.$key + this.firebaseService.userKey).toString());\n      this.firebaseService.deleteAlert(post.$key + this.firebaseService.userKey);\n      post.hearts -= 1;\n      this.firebaseService.updatePost(post);\n    } \n    this.viewCtrl.dismiss();\n  }\n\n  deletePost(post: Posts) {\n    \n    this.deletePostComment(post);\n \n  }\n\n  deletePostComment(post?){\n   let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n\n    loading.present().then(res => {\n      this.firebaseService.deletePost(post.$key);\n      /* this.viewCtrl.dismiss();\n      this.firebaseService.getComments().snapshotChanges().subscribe(items => {\n        this.deleteCommentArray = [];\n        items.forEach(item => {\n          var y = item.payload.toJSON();\n          y[\"key\"] = item.key;\n          this.deleteCommentArray.push(y);\n        });\n        this.deleteCommentArray = this.deleteCommentArray.filter(data => data.postid == post.$key);\n        this.deleteCommentArray.map(res => {\n          this.firebaseService.deleteComment(res.key);\n        })\n      }) */\n      this.navCtrl.push('AlertsPage');\n    });\n  }\n\n\n  commentPost(comment: Comments) {\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n\n    loading.present().then(res => {\n      comment.postid = this.post['$key'];\n      comment.userid = this.firebaseService.userKey;\n      comment.time = new Date().getTime() / 1000;\n      this.firebaseService.comment(comment);\n\n      var alerts = {\n        postid: this.post['$key'],\n        action: 'md-chatbubbles',\n        color: 'activecomment',\n        time: new Date().getTime() / 1000,\n        commentid: '',\n        postuserid: this.post['userid'],\n        userid: this.firebaseService.userKey,\n        image: this.firebaseService.userImage,\n        username: this.firebaseService.userName,\n        comment: '',\n        message: 'commented on your post',\n        post: comment.comment\n      }\n      this.firebaseService.alertCustomId2(alerts);\n\n      this.postComments = this.firebaseService.getComments();\n      var x = this.postComments.snapshotChanges().subscribe(items => {\n        this.arrayComments = [];\n        this.filteredArrayComments = [];\n        items.forEach(elements => {\n          var y = elements.payload.toJSON();\n          y['$key'] = elements.key;\n          this.arrayComments.push(y);\n        });\n      });\n\n      this.updatePost(comment);\n    })\n    loading.dismiss();\n  }\n\n  updatePost(comment) {\n    this.firebaseService.getSinglePost(comment.postid).snapshotChanges().subscribe(item => {\n      if (item.key != null) {\n        this.arraySinglePost = [];\n        var y = item.payload.toJSON();\n        y['$key'] = item.key;\n        this.arrayComments = this.arrayComments.filter(data => data.postid == comment.postid);\n        y[\"comments\"] = this.arrayComments.length;\n        this.firebaseService.updatePost(y);\n      }\n    });\n  }\n\n\n\n  closePost() {\n    this.viewCtrl.dismiss();\n  }\n\n  textLength(str) {\n    this.textLeft = 250 - str.length;\n    console.log(this.textLeft);\n  }\n\n  handleSelection(event) {\n    this.message = this.message + \" \" + event.char;\n    console.log(this.message);\n  }\n\n  navTag() {\n    let modal = this.modalCtrl.create('TagboardPage');\n    modal.onDidDismiss((data) => {\n      if (data) {\n        data.name = data.name.replace(/ +/g, \"\");\n        this.message = this.message + ' #' + data.name.toLowerCase();\n      }\n    })\n    modal.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/viewalert/viewalert.ts"]}
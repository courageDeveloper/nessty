{"version":3,"sources":["../../src/components/login/login-flat/login-flat.module.ts","../../src/components/login/login-flat/login-flat.ts"],"names":["LoginFlatModule","__decorate","Object","__WEBPACK_IMPORTED_MODULE_0__angular_core__","declarations","__WEBPACK_IMPORTED_MODULE_2__login_flat__","imports","__WEBPACK_IMPORTED_MODULE_1_ionic_angular__","forChild","exports","schemas","LoginFlat","navCtrl","navParams","firebaseService","_this","this","user","username","password","email","points","image","status","online","onEvent","event","validate","events","isUsernameValid","isPasswordValid","prototype","login","console","log","errorMessage","catch","error","message","then","res","emailVerification","JSON","parse","localStorage","getItem","setTimeout","usersObject","uid","$key","localStorageItem","setItem","updateUser2","push","length","navLogin","navReset","selector","template","__WEBPACK_IMPORTED_MODULE_2__providers_firebase_service__"],"mappings":"4gBAiBAA,EAAA,WAAA,SAAAA,KAA+B,OAAlBA,EAAeC,GAb3BC,OAAAC,EAAA,SAAAD,EACGE,cACIC,EAAA,GAEJC,SACIC,EAAA,EAAgBC,SAASH,EAAA,IAE7BI,SACIJ,EAAA,GAEJK,SAAUP,EAAA,2BAGDH,GAAb,mkBCNAW,EAAA,WA0BI,SAAAA,EAAmBC,EAA+BC,EAA8BC,GAAhF,IAAAC,EAAAC,KAAmBA,KAAAJ,QAAAA,EAA+BI,KAAAH,UAAAA,EAA8BG,KAAAF,gBAAAA,EAVhFE,KAAAC,MACIC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,OAAQ,EACRC,MAAO,GACPC,OAAQ,GACRC,QAAQ,GAQZR,KAAAS,QAAU,SAACC,IACM,WAATA,GAAuBX,EAAKY,aAG5BZ,EAAKa,OAAOF,IACZX,EAAKa,OAAOF,IACRR,SAAYH,EAAKG,SACjBC,SAAYJ,EAAKI,YAXzBH,KAAKa,iBAAkB,EACvBb,KAAKc,iBAAkB,SAe3BnB,EAAAoB,UAAAC,MAAA,SAAMf,GAAN,IAAAF,EAAAC,KACIiB,QAAQC,IAAIjB,GACZD,KAAKmB,aAAe,IACpBnB,KAAKF,gBAAgBkB,MAAMf,GAAMmB,MAAM,SAAAC,GACnCtB,EAAKoB,aAAeE,EAAMC,UAC3BC,KAAK,SAAAC,GACJzB,EAAK0B,kBAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,sBAChC,MAArB9B,EAAKoB,cAA6C,KAArBpB,EAAKoB,eAClCF,QAAQC,IAAInB,EAAK0B,mBACjBK,WAAW,WAEP,GADAb,QAAQC,IAAInB,EAAK0B,mBACa,GAA1B1B,EAAK0B,kBAA2B,CAChCR,QAAQC,IAAInB,EAAKD,gBAAgBiC,aACjC,IAAIC,EAAMjC,EAAKD,gBAAgBiC,YAAYE,KAC3ClC,EAAKmC,iBAAmBN,aAAaO,QAAQ,SAAUH,GACvDjC,EAAKD,gBAAgBiC,YAAY1B,QAAU,EAC3CN,EAAKD,gBAAgBsC,YAAYrC,EAAKD,gBAAgBiC,aACtDhC,EAAKH,QAAQyC,KAAK,sBAEa,GAA1BtC,EAAK0B,oBACV1B,EAAKoB,aAAe,wFAEzB,SAKfxB,EAAAoB,UAAAJ,SAAA,WAYI,OAXAX,KAAKa,iBAAkB,EACvBb,KAAKc,iBAAkB,EAClBd,KAAKE,UAAoC,GAAxBF,KAAKE,SAASoC,SAChCtC,KAAKa,iBAAkB,EACvBI,QAAQC,IAAI,oBAGXlB,KAAKG,UAAoC,GAAxBH,KAAKG,SAASmC,SAChCtC,KAAKc,iBAAkB,GAGpBd,KAAKc,iBAAmBd,KAAKa,iBAGxClB,EAAAoB,UAAAwB,SAAA,WACIvC,KAAKJ,QAAQyC,KAAK,iBAGtB1C,EAAAoB,UAAAyB,SAAA,WACIxC,KAAKJ,QAAQyC,KAAK,sBAzFbpD,GAARC,OAAAC,EAAA,MAAAD,uDACQD,GAARC,OAAAC,EAAA,MAAAD,yDAFQS,EAASV,GAJrBC,OAAAC,EAAA,UAAAD,EACGuD,SAAU,aAAYC,SAAA,s6FAExB,qBAAAnD,EAAA,EAAAA,EAAA,EAAAoD,EAAA,QACF","sourcesContent":["import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LoginFlat } from './login-flat';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginFlat\r\n    ],\r\n    imports: [\r\n        IonicPageModule.forChild(LoginFlat),\r\n    ],\r\n    exports: [\r\n        LoginFlat\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class LoginFlatModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/login/login-flat/login-flat.module.ts","import { Component, Input } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { Users } from '../../../models/users.interface';\r\nimport { FirebaseServiceProvider } from '../../../providers/firebase-service';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'login-flat',\r\n    templateUrl: 'login-flat.html'\r\n})\r\nexport class LoginFlat {\r\n    @Input() data: any;\r\n    @Input() events: any;\r\n\r\n    public username: string;\r\n    public password: string;\r\n    errorMessage: any;\r\n    emailVerification;\r\n    points;\r\n    arrayUsers;\r\n    userObjects;\r\n    loggedUser;\r\n    localStorageItem\r\n\r\n    public isUsernameValid: boolean;\r\n    public isPasswordValid: boolean;\r\n    user: Users = {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        points: 0,\r\n        image: '',\r\n        status: '',\r\n        online: false\r\n    }\r\n\r\n    constructor(public navCtrl: NavController, public navParams: NavParams, private firebaseService: FirebaseServiceProvider) {\r\n        this.isUsernameValid = true;\r\n        this.isPasswordValid = true;\r\n    }\r\n\r\n    onEvent = (event: string): void => {\r\n        if (event == \"onLogin\" && !this.validate()) {\r\n            return;\r\n        }\r\n        if (this.events[event]) {\r\n            this.events[event]({\r\n                'username': this.username,\r\n                'password': this.password\r\n            });\r\n        }\r\n    }\r\n\r\n    login(user: Users) {\r\n        console.log(user);\r\n        this.errorMessage = \" \";\r\n        this.firebaseService.login(user).catch(error => {\r\n            this.errorMessage = error.message\r\n        }).then(res => {\r\n            this.emailVerification = JSON.parse(localStorage.getItem('emailVerification'));\r\n            if (this.errorMessage == null || this.errorMessage == \" \") {\r\n                console.log(this.emailVerification);\r\n                setTimeout(() => {\r\n                    console.log(this.emailVerification);\r\n                    if (this.emailVerification == true) {\r\n                        console.log(this.firebaseService.usersObject);\r\n                        var uid = this.firebaseService.usersObject.$key;\r\n                        this.localStorageItem = localStorage.setItem('userId', uid);\r\n                        this.firebaseService.usersObject.points += 1;\r\n                        this.firebaseService.updateUser2(this.firebaseService.usersObject);\r\n                        this.navCtrl.push(\"FirstpostPage\");\r\n                    }\r\n                    else if (this.emailVerification == false) {\r\n                        this.errorMessage = \"Please verify email before permitted to login, if verified click login button again\";\r\n                    }\r\n                }, 1000);\r\n            }\r\n        })\r\n    }\r\n\r\n    validate(): boolean {\r\n        this.isUsernameValid = true;\r\n        this.isPasswordValid = true;\r\n        if (!this.username || this.username.length == 0) {\r\n            this.isUsernameValid = false;\r\n            console.log(\"please add data\");\r\n        }\r\n\r\n        if (!this.password || this.password.length == 0) {\r\n            this.isPasswordValid = false;\r\n        }\r\n\r\n        return this.isPasswordValid && this.isUsernameValid;\r\n    }\r\n\r\n    navLogin() {\r\n        this.navCtrl.push('RegisterPage');\r\n    }\r\n\r\n    navReset() {\r\n        this.navCtrl.push('ResetpasswordPage');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/login/login-flat/login-flat.ts"]}
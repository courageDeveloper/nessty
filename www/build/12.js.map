{"version":3,"sources":["../../src/pages/tagboard/tagboard.module.ts","../../src/pages/tagboard/tagboard.ts"],"names":[],"mappings":"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","file":"12.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TagboardPage } from './tagboard';\n\n@NgModule({\n  declarations: [\n    TagboardPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TagboardPage),\n  ],\n})\nexport class TagboardPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tagboard/tagboard.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, ViewController, ModalController, NavController, LoadingController, NavParams } from 'ionic-angular';\nimport { HttpService } from '../../services/HttpService';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * Generated class for the TagboardPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-tagboard',\n  templateUrl: 'tagboard.html',\n  providers: [HttpService]\n})\nexport class TagboardPage {\n  boards = [];\n  green;\n  blue;\n  black\n  purple;\n  orange;\n  red;\n  boundClass;\n  apiData;\n  errorMessage;\n  colors;\n  catObject = {};\n  categories = [];\n  catArray;\n\n  constructor(public navCtrl: NavController, public loadingCtrl: LoadingController, public httpService: HttpService, public modalCtrl: ModalController, public navParams: NavParams, public viewCtrl: ViewController) {\n  }\n\n  ionViewDidLoad() {\n    this.red = true;\n    this.orange = true;\n    this.green = true;\n    this.black = true;\n    this.purple = true;\n\n    console.log('ionViewDidLoad TagboardPage');\n    /*  this.boards = [{image:\"assets/images/dark-1.jpg\",name:\"Physical Health\",color:\"green\"},{image:\"assets/images/Home-Default.jpg\",name:\"Dating\",color:\"blue\"},\n       {image:\"assets/images/dark-3.jpg\",name:\"Anxiety\",color:\"red\"},{image:\"assets/images/dark-2.jpg\",name:\"Depression\",color:\"orange\"},{image:\"assets/images/light-3.jpg\",name:\"Kinetics\",color:\"purple\"}\n    ]\n */\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...'\n    });\n    loading.present();\n    this.httpService.getCategories().pipe(catchError((err) => { this.errorMessage = err; console.log(err); loading.dismiss(); throw err })).subscribe(res => {\n      this.colors = [\"green\", \"black\", \"green\", \"black\", \"green\", \"black\", \"green\", \"black\", \"green\", \"black\", \"green\", \"black\", \"green\", \"black\",\n      ];\n      console.log(this.colors);\n      var apiResponse = [];\n      apiResponse = res;\n\n      apiResponse.map(data => {\n        this.apiData = data;\n        var name = this.apiData.name;\n        var id = this.apiData.id;\n        var link = this.apiData.link;\n\n        this.catObject = {\n          id: id,\n          name: name,\n          link: link,\n          color: this.colors,\n          togglestatus: false\n        }\n        this.categories.push(this.catObject);\n        console.log(this.categories);\n\n        for (var i = 0; i < this.categories.length; i++) {\n          this.categories[i].color = this.colors[i];\n        }\n      })\n      setTimeout(function () {\n        loading.dismiss();\n      }, 1000);\n    })\n\n\n    this.boundClass = {\n      green: this.green,\n      red: this.red,\n      black: this.black,\n      orange: this.orange,\n      purple: this.purple\n    }\n  }\n\n  closePost() {\n    this.viewCtrl.dismiss();\n  }\n\n  getName(board) {\n    this.viewCtrl.dismiss(board);\n    /*  let modal = this.modalCtrl.create('PostPage',{board:board});\n    modal.onDidDismiss((board) => {\n      if (board) {\n        console.log(board)\n      }\n    })\n    modal.present(); */\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tagboard/tagboard.ts"],"sourceRoot":""}
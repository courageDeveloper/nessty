webpackJsonp([12],{551:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o.d(t,"TagboardPageModule",function(){return c});var n=o(0),r=o(16),a=o(585),i=this&&this.__decorate||function(e,t,o,n){var r,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,o,i):r(t,o))||i);return a>3&&i&&Object.defineProperty(t,o,i),i},c=function(){function e(){}return e=i([Object(n.NgModule)({declarations:[a.a],imports:[r.n.forChild(a.a)]})],e)}()},585:function(e,t,o){"use strict";o.d(t,"a",function(){return l});var n=o(0),r=o(16),a=o(305),i=o(17),c=this&&this.__decorate||function(e,t,o,n){var r,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,o,i):r(t,o))||i);return a>3&&i&&Object.defineProperty(t,o,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(e,t,o,n,r,a){this.navCtrl=e,this.loadingCtrl=t,this.httpService=o,this.modalCtrl=n,this.navParams=r,this.viewCtrl=a,this.boards=[],this.catObject={},this.categories=[]}return e.prototype.ionViewDidLoad=function(){var e=this;this.red=!0,this.orange=!0,this.green=!0,this.black=!0,this.purple=!0,console.log("ionViewDidLoad TagboardPage");var t=this.loadingCtrl.create({content:"Please wait..."});t.present(),this.httpService.getCategories().pipe(Object(i.catchError)(function(o){throw e.errorMessage=o,console.log(o),t.dismiss(),o})).subscribe(function(o){e.colors=["green","black","green","black","green","black","green","black","green","black","green","black","green","black"],console.log(e.colors);o.map(function(t){e.apiData=t;e.catObject={id:e.apiData.id,name:e.apiData.name,link:e.apiData.link,color:e.colors,togglestatus:!1},e.categories.push(e.catObject),console.log(e.categories);for(var o=0;o<e.categories.length;o++)e.categories[o].color=e.colors[o]}),setTimeout(function(){t.dismiss()},1e3)}),this.boundClass={green:this.green,red:this.red,black:this.black,orange:this.orange,purple:this.purple}},e.prototype.closePost=function(){this.viewCtrl.dismiss()},e.prototype.getName=function(e){this.viewCtrl.dismiss(e)},e=c([Object(n.Component)({selector:"page-tagboard",template:"\x3c!--\n  Generated template for the TagboardPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n--\x3e\n<ion-header>\n<ion-toolbar>\n  <ion-buttons class=\"button\">\n      <button (click)=\"closePost()\" ion-button icon-only menuToggle>\n      <ion-icon class=\"icon-color\" name=\"ios-close-outline\"></ion-icon>\n    </button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding>\n  <div class=\"align-board\" *ngFor=\"let board of categories\">\n<ion-badge class=\"badge\" text-lowercase (click)=\"getName(board)\" [ngClass]=\"{'green':board.color==='green', 'black':board.color==='black', 'red':board.color==='red','orange':board.color==='orange','purple':board.color==='purple'}\">{{board.name}}</ion-badge>\n  </div>\n</ion-content>\n",providers:[a.a]}),s("design:paramtypes",[r.q,r.o,a.a,r.p,r.r,r.x])],e)}()}});